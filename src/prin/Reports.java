/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prin;

import com.itextpdf.text.Document;
import config.conexion;
import java.sql.Statement;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author dsdev
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form Reports
     */
    conexion con1 = new conexion();
    Connection conet;
    Statement st;
    ResultSet rs;
    int idc;

    public Reports() {
        initComponents();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Reportes"));

        jButton1.setText("Catalgo de productos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Corte de Caja (Resumido)");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Dcumentos del Usuario (Resumido)");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jButton2))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(jButton1)))
                .addContainerGap(225, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addGap(39, 39, 39)
                .addComponent(jButton2)
                .addGap(39, 39, 39)
                .addComponent(jButton4)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jButton6.setText("Inicio");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        conet = con1.getConnection();

        String usuario = UsuarioActual.getNombreUsuario();

        try {
            // Consulta SQL para obtener los datos de productos
            String consulta = "SELECT CODIGOPRODUCTO, NOMBREPRODUCTO, PRECIOUNITARIO, CANTIDADPRODUCTO FROM PRODUCTOS";

            // Crear el documento PDF
            Document documento = new Document(PageSize.A4.rotate());
            String ruta = System.getProperty("user.home") + "/OneDrive/Escritorio/CatalogoProductos.pdf";
            PdfWriter writer = PdfWriter.getInstance(documento, new FileOutputStream(ruta));

            // Abrir el documento
            documento.open();

            // Agregar el título en la izquierda
            Font fontTitulo = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD); // Cambia el color a azul
            Paragraph titulo = new Paragraph("Catálogo de Productos", fontTitulo);
            titulo.setAlignment(Element.ALIGN_LEFT);
            documento.add(titulo);

            // Agregar el nombre "B3rert" debajo del título
            Font fontNombre = new Font(Font.FontFamily.HELVETICA, 15);
            fontNombre.setColor(new BaseColor(143, 0, 53)); // Color "corinto"
            Paragraph nombre = new Paragraph("B3rert - Distribuidora de Lacteos.", fontNombre);
            nombre.setAlignment(Element.ALIGN_LEFT);
            nombre.setSpacingAfter(20);

            documento.add(nombre);

            // Obtener la fecha actual
            Date fechaActual = new Date();

            // Crear un formato para la fecha
            // Crear un formato para la fecha en el formato de MySQL (YYYY-MM-DD)
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

            // Formatear la fecha actual como una cadena
            String fechaFormateada = formatoFecha.format(fechaActual);

            Font fontTextRed = new Font(Font.FontFamily.HELVETICA);

            // Agregar el nombre "B3rert" debajo del título
            Paragraph fecha = new Paragraph(fechaFormateada, fontTextRed);
            fecha.setAlignment(Element.ALIGN_RIGHT);
            documento.add(fecha);

            // Agregar el nombre "B3rert" debajo del título
            Paragraph user = new Paragraph("Usuario: " + usuario, fontTextRed);
            user.setAlignment(Element.ALIGN_RIGHT);
            user.setSpacingAfter(20);

            documento.add(user);

            // Crear una tabla para mostrar los productos
            PdfPTable tabla = new PdfPTable(4);
            tabla.setWidthPercentage(100);

            // Configurar el color del texto en los encabezados (azul)
            BaseColor colorAzul = new BaseColor(0, 102, 204); // Color azul
            Font fontEncabezados = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, colorAzul);

            PdfPCell encabezadoCodigo = new PdfPCell(new Paragraph("Código", fontEncabezados));
            PdfPCell encabezadoNombre = new PdfPCell(new Paragraph("Nombre", fontEncabezados));
            PdfPCell encabezadoPrecio = new PdfPCell(new Paragraph("Precio Unitario", fontEncabezados));
            PdfPCell encabezadoCantidad = new PdfPCell(new Paragraph("Cantidad", fontEncabezados));

            // Configurar el borde inferior de los encabezados
            encabezadoCodigo.setBorder(Rectangle.BOTTOM);
            encabezadoNombre.setBorder(Rectangle.BOTTOM);
            encabezadoPrecio.setBorder(Rectangle.BOTTOM);
            encabezadoCantidad.setBorder(Rectangle.BOTTOM);

            // Configurar el grosor de los bordes
            encabezadoCodigo.setBorderWidthBottom(2f);
            encabezadoNombre.setBorderWidthBottom(2f);
            encabezadoPrecio.setBorderWidthBottom(2f);
            encabezadoCantidad.setBorderWidthBottom(2f);

            encabezadoCodigo.setPadding(5);
            encabezadoNombre.setPadding(5);
            encabezadoPrecio.setPadding(5);
            encabezadoCantidad.setPadding(5);

            tabla.addCell(encabezadoCodigo);
            tabla.addCell(encabezadoNombre);
            tabla.addCell(encabezadoPrecio);
            tabla.addCell(encabezadoCantidad);

            // Preparar la consulta SQL
            try (PreparedStatement pstmt = conet.prepareStatement(consulta)) {
                // Ejecutar la consulta y obtener el resultado
                ResultSet rs = pstmt.executeQuery();

                // Agregar filas de datos a la tabla
                while (rs.next()) {
                    String codigo = rs.getString("CODIGOPRODUCTO");
                    String nombreProducto = rs.getString("NOMBREPRODUCTO");
                    float precio = rs.getFloat("PRECIOUNITARIO");
                    int cantidad = rs.getInt("CANTIDADPRODUCTO");

                    // Crear una celda personalizada para cada dato
                    PdfPCell cellCodigo = new PdfPCell(new Paragraph(codigo));
                    PdfPCell cellNombre = new PdfPCell(new Paragraph(nombreProducto));
                    PdfPCell cellPrecio = new PdfPCell(new Paragraph(String.format("%.2f", precio)));
                    PdfPCell cellCantidad = new PdfPCell(new Paragraph(String.valueOf(cantidad)));

                    // Configurar bordes solo en la parte inferior
                    cellCodigo.setBorder(Rectangle.BOTTOM);
                    cellNombre.setBorder(Rectangle.BOTTOM);
                    cellPrecio.setBorder(Rectangle.BOTTOM);
                    cellCantidad.setBorder(Rectangle.BOTTOM);

                    tabla.addCell(cellCodigo);
                    tabla.addCell(cellNombre);
                    tabla.addCell(cellPrecio);
                    tabla.addCell(cellCantidad);
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }

            documento.add(tabla);

            // Agregar el logo en la parte superior derecha
            Image logo = Image.getInstance("src/assets/logo.png");
            logo.scaleToFit(150, 100);
            logo.setAbsolutePosition(665, 500);
            documento.add(logo);

            // Cerrar el documento
            documento.close();

            JOptionPane.showMessageDialog(this, "El reporte ha sido generado con éxito en: " + ruta);

        } catch (Exception e) {
            e.printStackTrace();
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        conet = con1.getConnection();

        String usuario = UsuarioActual.getNombreUsuario();

        try {
            // Obtener la fecha actual
            Date fechaActual = new Date();
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");

            // Crear el documento PDF
            Document documento = new Document(PageSize.A4.rotate());
            String ruta = System.getProperty("user.home") + "/OneDrive/Escritorio/CorteDeCajaResumido.pdf";
            PdfWriter.getInstance(documento, new FileOutputStream(ruta));

            // Abrir el documento
            documento.open();

            // Agregar el título en la izquierda
            Font fontTitulo = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD); // Cambia el color a azul
            Paragraph titulo = new Paragraph("Corte de Caja Resumido", fontTitulo);
            titulo.setAlignment(Element.ALIGN_LEFT);
            documento.add(titulo);

            // Agregar el nombre "B3rert" debajo del título
            Font fontNombre = new Font(Font.FontFamily.HELVETICA, 15);
            fontNombre.setColor(new BaseColor(143, 0, 53)); // Color "corinto"
            Paragraph nombre = new Paragraph("B3rert - Distribuidora de Lacteos.", fontNombre);
            nombre.setAlignment(Element.ALIGN_LEFT);
            nombre.setSpacingAfter(20);

            documento.add(nombre);

            // Obtener la fecha actual
            // Crear un formato para la fecha
            // Crear un formato para la fecha en el formato de MySQL (YYYY-MM-DD)
            SimpleDateFormat formatoFechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

            // Formatear la fecha actual como una cadena
            String fechaFormateada = formatoFechaHora.format(fechaActual);

            Font fontTextRed = new Font(Font.FontFamily.HELVETICA);

            // Agregar el nombre "B3rert" debajo del título
            Paragraph fecha = new Paragraph(fechaFormateada, fontTextRed);
            fecha.setAlignment(Element.ALIGN_RIGHT);
            documento.add(fecha);

            // Agregar el nombre "B3rert" debajo del título
            Paragraph user = new Paragraph("Usuario: " + usuario, fontTextRed);
            user.setAlignment(Element.ALIGN_RIGHT);
            user.setSpacingAfter(20);

            documento.add(user);

            // Crear una tabla para mostrar los documentos y totales
            PdfPTable tabla = new PdfPTable(4);
            tabla.setWidthPercentage(100);

            // Configurar el color del texto en los encabezados (azul)
            BaseColor colorAzul = new BaseColor(0, 102, 204); // Color azul
            Font fontEncabezados = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, colorAzul);

            // Configurar encabezados de columna
            PdfPCell encabezadoDocumento = new PdfPCell(new Phrase("Documento", fontEncabezados));
            PdfPCell encabezadoTitulo = new PdfPCell(new Phrase("Título", fontEncabezados));
            PdfPCell encabezadoFecha = new PdfPCell(new Phrase("Fecha", fontEncabezados));
            PdfPCell encabezadoTotal = new PdfPCell(new Phrase("Total", fontEncabezados));
            // Configurar el borde inferior de los encabezados
            encabezadoDocumento.setBorder(Rectangle.BOTTOM);
            encabezadoTitulo.setBorder(Rectangle.BOTTOM);
            encabezadoFecha.setBorder(Rectangle.BOTTOM);
            encabezadoTotal.setBorder(Rectangle.BOTTOM);

// Configurar el grosor de los bordes
            encabezadoDocumento.setBorderWidthBottom(2f);
            encabezadoTitulo.setBorderWidthBottom(2f);
            encabezadoFecha.setBorderWidthBottom(2f);
            encabezadoTotal.setBorderWidthBottom(2f);

            encabezadoDocumento.setPadding(5);
            encabezadoTitulo.setPadding(5);
            encabezadoFecha.setPadding(5);
            encabezadoTotal.setPadding(5);

            // Agregar encabezados a la tabla
            tabla.addCell(encabezadoDocumento);
            tabla.addCell(encabezadoTitulo);
            tabla.addCell(encabezadoFecha);
            tabla.addCell(encabezadoTotal);

            SimpleDateFormat formatoddMMyyy = new SimpleDateFormat("dd/MM/yyyy");

            // Consulta SQL para obtener documentos y totales
            String consulta = "SELECT d.id, d.titulo, d.fecha, SUM(t.cantidad_vendida * t.precio_unitario) AS total "
                    + "FROM documentos d "
                    + "INNER JOIN transacciones t ON d.id = t.documento_id "
                    + "WHERE d.fecha = ? AND d.usuario = ? "
                    + "GROUP BY d.id, d.titulo, d.fecha";

            try (PreparedStatement pstmt = conet.prepareStatement(consulta)) {
                pstmt.setString(1, formatoFecha.format(fechaActual));
                pstmt.setString(2, usuario);
                ResultSet rs = pstmt.executeQuery();

                while (rs.next()) {
                    int idDocumento = rs.getInt("id");
                    String tituloDocumento = rs.getString("titulo");
                    Date fechaDocumento = rs.getDate("fecha");
                    double totalTransacciones = rs.getDouble("total");

// Crear una celda personalizada para cada dato
                    PdfPCell cellId = new PdfPCell(new Paragraph(String.valueOf(idDocumento)));
                    PdfPCell cellTitle = new PdfPCell(new Paragraph(tituloDocumento));
                    PdfPCell cellDate = new PdfPCell(new Paragraph(formatoddMMyyy.format(fechaDocumento)));
                    PdfPCell cellTotal = new PdfPCell(new Paragraph(String.format("%.2f", totalTransacciones)));

                    cellTotal.setHorizontalAlignment(Element.ALIGN_RIGHT);

// Configurar bordes solo en la parte inferior
                    cellId.setBorder(Rectangle.BOTTOM);
                    cellTitle.setBorder(Rectangle.BOTTOM);
                    cellDate.setBorder(Rectangle.BOTTOM);
                    cellTotal.setBorder(Rectangle.BOTTOM);

                    tabla.addCell(cellId);
                    tabla.addCell(cellTitle);
                    tabla.addCell(cellDate);
                    tabla.addCell(cellTotal);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            documento.add(tabla);

            // Agregar el logo en la parte superior derecha
            Image logo = Image.getInstance("src/assets/logo.png");
            logo.scaleToFit(150, 100);
            logo.setAbsolutePosition(665, 500);
            documento.add(logo);

            // Cerrar el documento
            documento.close();

            JOptionPane.showMessageDialog(this, "El reporte ha sido generado con éxito en: " + ruta);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        conet = con1.getConnection();

        String usuario = UsuarioActual.getNombreUsuario();

        try {
            // Obtener la fecha actual
            Date fechaActual = new Date();
            SimpleDateFormat formatoFecha = new SimpleDateFormat("yyyy-MM-dd");

            // Crear el documento PDF
            Document documento = new Document(PageSize.A4.rotate());
            String ruta = System.getProperty("user.home") + "/OneDrive/Escritorio/DocumentosResumido.pdf";
            PdfWriter.getInstance(documento, new FileOutputStream(ruta));

            // Abrir el documento
            documento.open();

            // Agregar el título en la izquierda
            Font fontTitulo = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD); // Cambia el color a azul
            Paragraph titulo = new Paragraph("Documentos (Usuario) Resumido", fontTitulo);
            titulo.setAlignment(Element.ALIGN_LEFT);
            documento.add(titulo);

            // Agregar el nombre "B3rert" debajo del título
            Font fontNombre = new Font(Font.FontFamily.HELVETICA, 15);
            fontNombre.setColor(new BaseColor(143, 0, 53)); // Color "corinto"
            Paragraph nombre = new Paragraph("B3rert - Distribuidora de Lacteos.", fontNombre);
            nombre.setAlignment(Element.ALIGN_LEFT);
            nombre.setSpacingAfter(20);

            documento.add(nombre);

            // Obtener la fecha actual
            // Crear un formato para la fecha
            // Crear un formato para la fecha en el formato de MySQL (YYYY-MM-DD)
            SimpleDateFormat formatoFechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

            // Formatear la fecha actual como una cadena
            String fechaFormateada = formatoFechaHora.format(fechaActual);

            Font fontTextRed = new Font(Font.FontFamily.HELVETICA);

            // Agregar el nombre "B3rert" debajo del título
            Paragraph fecha = new Paragraph(fechaFormateada, fontTextRed);
            fecha.setAlignment(Element.ALIGN_RIGHT);
            documento.add(fecha);

            // Agregar el nombre "B3rert" debajo del título
            Paragraph user = new Paragraph("Usuario: " + usuario, fontTextRed);
            user.setAlignment(Element.ALIGN_RIGHT);
            user.setSpacingAfter(20);

            documento.add(user);

            // Crear una tabla para mostrar los documentos y totales
            PdfPTable tabla = new PdfPTable(4);
            tabla.setWidthPercentage(100);

            // Configurar el color del texto en los encabezados (azul)
            BaseColor colorAzul = new BaseColor(0, 102, 204); // Color azul
            Font fontEncabezados = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, colorAzul);

            // Configurar encabezados de columna
            PdfPCell encabezadoDocumento = new PdfPCell(new Phrase("Documento", fontEncabezados));
            PdfPCell encabezadoTitulo = new PdfPCell(new Phrase("Título", fontEncabezados));
            PdfPCell encabezadoFecha = new PdfPCell(new Phrase("Fecha", fontEncabezados));
            PdfPCell encabezadoTotal = new PdfPCell(new Phrase("Total", fontEncabezados));
            // Configurar el borde inferior de los encabezados
            encabezadoDocumento.setBorder(Rectangle.BOTTOM);
            encabezadoTitulo.setBorder(Rectangle.BOTTOM);
            encabezadoFecha.setBorder(Rectangle.BOTTOM);
            encabezadoTotal.setBorder(Rectangle.BOTTOM);

// Configurar el grosor de los bordes
            encabezadoDocumento.setBorderWidthBottom(2f);
            encabezadoTitulo.setBorderWidthBottom(2f);
            encabezadoFecha.setBorderWidthBottom(2f);
            encabezadoTotal.setBorderWidthBottom(2f);

            encabezadoDocumento.setPadding(5);
            encabezadoTitulo.setPadding(5);
            encabezadoFecha.setPadding(5);
            encabezadoTotal.setPadding(5);

            // Agregar encabezados a la tabla
            tabla.addCell(encabezadoDocumento);
            tabla.addCell(encabezadoTitulo);
            tabla.addCell(encabezadoFecha);
            tabla.addCell(encabezadoTotal);

            SimpleDateFormat formatoddMMyyy = new SimpleDateFormat("dd/MM/yyyy");

            // Consulta SQL para obtener documentos y totales
            String consulta = "SELECT d.id, d.titulo, d.fecha, SUM(t.cantidad_vendida * t.precio_unitario) AS total "
                    + "FROM documentos d "
                    + "INNER JOIN transacciones t ON d.id = t.documento_id "
                    + "WHERE  d.usuario = ? "
                    + "GROUP BY d.id, d.titulo, d.fecha";

            try (PreparedStatement pstmt = conet.prepareStatement(consulta)) {
                pstmt.setString(1, usuario);
                ResultSet rs = pstmt.executeQuery();

                while (rs.next()) {
                    int idDocumento = rs.getInt("id");
                    String tituloDocumento = rs.getString("titulo");
                    Date fechaDocumento = rs.getDate("fecha");
                    double totalTransacciones = rs.getDouble("total");

// Crear una celda personalizada para cada dato
                    PdfPCell cellId = new PdfPCell(new Paragraph(String.valueOf(idDocumento)));
                    PdfPCell cellTitle = new PdfPCell(new Paragraph(tituloDocumento));
                    PdfPCell cellDate = new PdfPCell(new Paragraph(formatoddMMyyy.format(fechaDocumento)));
                    PdfPCell cellTotal = new PdfPCell(new Paragraph(String.format("%.2f", totalTransacciones)));

                    cellTotal.setHorizontalAlignment(Element.ALIGN_RIGHT);

// Configurar bordes solo en la parte inferior
                    cellId.setBorder(Rectangle.BOTTOM);
                    cellTitle.setBorder(Rectangle.BOTTOM);
                    cellDate.setBorder(Rectangle.BOTTOM);
                    cellTotal.setBorder(Rectangle.BOTTOM);

                    tabla.addCell(cellId);
                    tabla.addCell(cellTitle);
                    tabla.addCell(cellDate);
                    tabla.addCell(cellTotal);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

            documento.add(tabla);

            // Agregar el logo en la parte superior derecha
            Image logo = Image.getInstance("src/assets/logo.png");
            logo.scaleToFit(150, 100);
            logo.setAbsolutePosition(665, 500);
            documento.add(logo);

            // Cerrar el documento
            documento.close();

            JOptionPane.showMessageDialog(this, "El reporte ha sido generado con éxito en: " + ruta);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.dispose();

        //S3 línea 3
        Menu formformulario1 = new Menu();

        //S3 línea 4
        formformulario1.setVisible(true);
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
